import groovy.json.JsonSlurper

pluginManagement {
    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()

        maven {
            name("Fabric")
            url("https://maven.fabricmc.net")
        }

        maven {
            name("Architectury")
            url("https://maven.architectury.dev")
        }

        maven {
            name("MinecraftForge")
            url("https://files.minecraftforge.net/maven")
        }

        maven {
            name("NeoForge")
            url("https://maven.neoforged.net/releases")
        }

        maven {
            name("Jitpack")
            url("https://jitpack.io")
        }
    }

    resolutionStrategy {
        eachPlugin {
            switch (requested.id.id) {
                case "com.replaymod.preprocess": {
                    useModule("com.github.Fallen-Breath:preprocessor:${requested.version}")
                    break
                }
            }
        }
    }
}

rootProject.setName(settings.providers.gradleProperty("mod.id").get())
include("magiclib-core")
include("magiclib-core:common")
include("magiclib-core:fabric")
include("magiclib-core:forge")
include("magiclib-core:neoforge")

Map<String, Map<String, ?>> settings = file("settings.json").withReader {
    new JsonSlurper().parse(it) as Map<String, Map<String, ?>>
}

for (String module_name: settings.projects.keySet()) {
    Map<String, ?> project_detail = settings.projects.get(module_name) as Map<String, ?>
    String prefix = project_detail.get("prefix")
    List<String> versions = project_detail.get("versions") as List<String>

    String root_node_name = versions.get(0)

    for(String ver: versions) {
        String project_name = "${module_name}:${prefix}-${ver}"
        include("${project_name}")

        ProjectDescriptor proj = project(":${project_name}")
        proj.setProjectDir(file("${module_name}/versions/${ver}"))
        proj.setBuildFileName("../${root_node_name}/build.gradle")
    }
}
